class Solution {
public:
    int kaden(vector<int>& nums){
        int sum=0;
        int maxi=INT_MIN;
        for(int i=0;i<nums.size();i++){
            sum=sum+nums[i];
            maxi=max(maxi,sum);
            if(sum<0)
                sum=0;
        }
        return maxi;
    }
    int maxSubarraySumCircular(vector<int>& nums) {
        int normalmax=kaden(nums);
        if(normalmax<0){
            return normalmax;
        }
        int sum=0;
        for(int i=0;i<nums.size();i++){
            sum=sum+nums[i];
        }
        int result1=kaden(nums);
        for(int i=0;i<nums.size();i++){
            nums[i]=-1*nums[i];
        }
        int result2=kaden(nums);
        return max(result1,sum+result2);
    }
};
